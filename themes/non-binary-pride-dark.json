{
    "$schema": "vscode://schemas/color-theme",
    "name": "Non-Binary Pride Dark",
    "include": "./default-dark-plus.json",
    "colors": {
        "editor.foreground": "#ffffff"
    },
    "tokenColors": [
        {
            // Amethyst (nb flag purple)
            "scope": [
                // String interpolation
                "punctuation.definition.template-expression.begin",
                "punctuation.definition.template-expression.end",
                "punctuation.section.embedded",
                // this.self
                "variable.language",
                // Other
                "constant.language",
                "entity.name.tag",
                "markup.changed",
                "meta.preprocessor",
                "entity.name.function.preprocessor",
                "meta.diff.header",
                "storage",
                "storage.type",
                "storage.modifier",
                "keyword.operator.noexcept",
                "keyword",
                "keyword.operator.new",
                "keyword.operator.expression",
                "keyword.operator.cast",
                "keyword.operator.sizeof",
                "keyword.operator.alignof",
                "keyword.operator.typeid",
                "keyword.operator.alignas",
                "keyword.operator.instanceof",
                "keyword.operator.logical.python",
                "keyword.operator.wordlike",
                "punctuation.section.embedded.begin.php",
                "punctuation.section.embedded.end.php",
                "constant.character",
                "markup.bold",
                "markup.heading",

                // Control flow / Special keywords
                "keyword.control",
                "source.cpp keyword.operator.new",
                "keyword.operator.delete",
                "keyword.other.using",
                "keyword.other.operator",
                "entity.name.operator",

                // Other
                "entity.other.attribute-name",
                "meta.structure.dictionary.key.python",
                "support.type.vendored.property-name",
                "support.type.property-name",
                "variable.css",
                "variable.scss",
                "variable.other.less",
                "source.coffee.embedded",
                "support.function.git-rebase",
                // Variable and parameter name
                "variable",
                "meta.definition.variable.name",
                "support.variable",
                "entity.name.variable",
                // Object keys, TS grammar specific
                "meta.object-literal.key",
                // Constants and enums
                "variable.other.constant",
                "variable.other.enummember",
            ],
            "settings": {
                "foreground": "#9b59d0"
            }
        },
        {
            // Aureolin (nb flag yellow)
            "scope": [
                // Function declarations
                "entity.name.function",
                "support.function",
                "support.constant.handlebars",
                "source.powershell variable.other.member",
                "entity.name.operator.custom-literal",
                // Other
                "keyword.operator.or.regexp",
                "keyword.control.anchor.regexp"
            ],
            "settings": {
                "foreground": "#fff433"
            }
        },
        {
            // White (nb flag)
            "scope": [
                // Reset JavaScript string interpolation expression
                "meta.template.expression",
                // coloring of the Java import and package identifiers
                "storage.modifier.import.java",
                "variable.language.wildcard.java",
                "storage.modifier.package.java",
                // Other
                "keyword.operator",
                "meta.embedded",
                "source.groovy.embedded",
                // Variable and parameter name
                "variable",
                "meta.definition.variable.name",
                "support.variable",
                "entity.name.variable"
            ],
            "settings": {
                "foreground": "#ffffff"
            }
        },
        {
            // Golden Poppy (yellow/orange)
            "scope": [
                // Types declaration and references
                "meta.return-type",
                "support.class",
                "support.type",
                "entity.name.type",
                "entity.name.namespace",
                "entity.other.attribute",
                "entity.name.scope-resolution",
                "entity.name.class",
                "storage.type.numeric.go",
                "storage.type.byte.go",
                "storage.type.boolean.go",
                "storage.type.string.go",
                "storage.type.uintptr.go",
                "storage.type.error.go",
                "storage.type.rune.go",
                "storage.type.cs",
                "storage.type.generic.cs",
                "storage.type.modifier.cs",
                "storage.type.variable.cs",
                "storage.type.annotation.java",
                "storage.type.generic.java",
                "storage.type.java",
                "storage.type.object.array.java",
                "storage.type.primitive.array.java",
                "storage.type.primitive.java",
                "storage.type.token.java",
                "storage.type.groovy",
                "storage.type.annotation.groovy",
                "storage.type.parameters.groovy",
                "storage.type.generic.groovy",
                "storage.type.object.array.groovy",
                "storage.type.primitive.array.groovy",
                "storage.type.primitive.groovy",
                // Types declaration and references, TS grammar specific
                "meta.type.cast.expr",
                "meta.type.new.expr",
                "support.constant.math",
                "support.constant.dom",
                "support.constant.json",
                "entity.other.inherited-class"
            ],
            "settings": {
                "foreground": "#fcc200"
            }
        },
        {
            // Emerald (green)
            "scope": [
                "markup.inline.raw",
                "meta.preprocessor.string",
                "string",
                "meta.embedded.assembly",
                "string.tag",
                "string.value",
                // CSS property value
                "support.constant.property-value",
                "support.constant.font-name",
                "support.constant.media-type",
                "support.constant.media",
                "constant.other.color.rgb-value",
                "constant.other.rgb-value",
                "support.constant.color",
                // "Regular expression groups
                "punctuation.definition.group.regexp",
                "punctuation.definition.group.assertion.regexp",
                "punctuation.definition.character-class.regexp",
                "punctuation.character.set.begin.regexp",
                "punctuation.character.set.end.regexp",
                "keyword.operator.negation.regexp",
                "support.other.parenthesis.regexp"
            ],
            "settings": {
                "foreground": "#50c878"
            }
        },
        {
            // Illuminating Emerald (darker green)
            "scope": [
                "string.regexp",
                "constant.character.character-class.regexp",
                "constant.other.character-class.set.regexp",
                "constant.other.character-class.regexp",
                "constant.character.set.regexp"
            ],
            "settings": {
                "foreground": "#319117"
            }
        },
        {
            // Medium Aquamarine (lighter green)
            "scope": [
                "entity.name.tag.css",
                "entity.other.attribute-name.class.css",
                "entity.other.attribute-name.class.mixin.css",
                "entity.other.attribute-name.id.css",
                "entity.other.attribute-name.parent-selector.css",
                "entity.other.attribute-name.pseudo-class.css",
                "entity.other.attribute-name.pseudo-element.css",
                "source.css.less entity.other.attribute-name.id",
                "entity.other.attribute-name.scss",
                "keyword.operator.quantifier.regexp",
                "constant.character.escape",
                // not highlighted in the default dark+ theme but I feel like they should be
                "keyword.operator.lookahead.regexp",
                "keyword.operator.lookahead.negative.regexp",
                "keyword.operator.lookbehind.regexp",
                "keyword.operator.lookbehind.negative.regexp",
                "keyword.operator.disjunction.regexp"
            ],
            "settings": {
                "foreground": "#66ddaa"
            }
        },
        {
            // Rhythm (grey)
            "scope": "comment",
            "settings": {
                "foreground": "#777696"
            }
        },
        {
            // Bright Lilac (light purple)
            "scope": [
                "keyword.operator",
            ],
            "settings": {
                "foreground": "#d891ef"
            }
        },
        {
            // Banana Mania (light yellow)
            "scope": [
                "constant.numeric",
                "keyword.operator.plus.exponent",
                "keyword.operator.minus.exponent",
                "markup.inserted",
                "meta.preprocessor.numeric",
                "keyword.other.unit",
                "constant.sha.git-rebase",
            ],
            "settings": {
                "foreground": "#FAE7B5",
            },
        },
    ],
    "semanticTokenColors": {
        "newOperator": "#9b59d0",
        "stringLiteral": "#50c878",
        "customLiteral": "#fff433",
        "numberLiteral": "#FAE7B5",
        "*.decorator": "#fff433"
    }
}